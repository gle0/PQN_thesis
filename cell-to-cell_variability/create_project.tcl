#*****************************************************************************************
# Vivado (TM) v2018.3 (64-bit)
#
# create_project.tcl: Tcl script for re-creating project 'heterogeneity'
#
# Generated by Vivado on Wed Dec 13 11:05:03 +0100 2023
# IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (create_project.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    "C:/Users/giuse/Desktop/vivado_projects/heterogeneity/heterogeneity.srcs/sources_1/imports/hdl/I_receiver.vhd"
#    "C:/Users/giuse/Desktop/vivado_projects/heterogeneity/heterogeneity.srcs/sources_1/imports/new/RS.vhd"
#    "C:/Users/giuse/Desktop/vivado_projects/heterogeneity/heterogeneity.srcs/sources_1/new/bshifter.vhd"
#    "C:/Users/giuse/Desktop/vivado_projects/heterogeneity/heterogeneity.srcs/sources_1/imports/hdl/pqn_unit.vhd"
#    "C:/Users/giuse/Desktop/vivado_projects/heterogeneity/heterogeneity.srcs/sources_1/imports/hdl/triger_generator.vhd"
#    "C:/Users/giuse/Desktop/vivado_projects/heterogeneity/heterogeneity.srcs/sources_1/imports/hdl/uart_rxd_ctrl.vhd"
#    "C:/Users/giuse/Desktop/vivado_projects/heterogeneity/heterogeneity.srcs/sources_1/imports/hdl/uart_txd_ctrl.vhd"
#    "C:/Users/giuse/Desktop/vivado_projects/heterogeneity/heterogeneity.srcs/sources_1/imports/hdl/v_transmitter.vhd"
#    "C:/Users/giuse/Desktop/vivado_projects/heterogeneity/heterogeneity.srcs/sources_1/imports/hdl/main.vhd"
#    "C:/Users/giuse/Desktop/vivado_projects/heterogeneity/heterogeneity.srcs/sources_1/imports/coe_file/rom1.coe"
#    "C:/Users/giuse/Desktop/vivado_projects/heterogeneity/heterogeneity.srcs/sources_1/imports/coe_file/rom2.coe"
#    "C:/Users/giuse/Desktop/vivado_projects/heterogeneity/heterogeneity.srcs/sources_1/imports/coe_file/rom3.coe"
#    "C:/Users/giuse/Desktop/vivado_projects/heterogeneity/heterogeneity.srcs/sources_1/imports/coe_file/rom4.coe"
#    "C:/Users/giuse/Desktop/vivado_projects/heterogeneity/heterogeneity.srcs/sources_1/imports/coe_file/rom5.coe"
#    "C:/Users/giuse/Desktop/vivado_projects/heterogeneity/heterogeneity.srcs/sources_1/imports/coe_file/rom6.coe"
#    "C:/Users/giuse/Desktop/vivado_projects/heterogeneity/heterogeneity.srcs/sources_1/imports/coe_file/rom7.coe"
#    "C:/Users/giuse/Desktop/vivado_projects/heterogeneity/heterogeneity.srcs/sources_1/imports/coe_file/rom8.coe"
#    "C:/Users/giuse/Desktop/vivado_projects/heterogeneity/heterogeneity.srcs/sources_1/imports/coe_file/rom9.coe"
#    "C:/Users/giuse/Desktop/vivado_projects/heterogeneity/heterogeneity.srcs/sources_1/imports/coe_file/rom10.coe"
#    "C:/Users/giuse/Desktop/vivado_projects/heterogeneity/heterogeneity.srcs/sources_1/imports/coe_file/rom11.coe"
#    "C:/Users/giuse/Desktop/vivado_projects/heterogeneity/heterogeneity.srcs/sources_1/imports/coe_file/rom12.coe"
#    "C:/Users/giuse/Desktop/vivado_projects/heterogeneity/heterogeneity.srcs/sources_1/imports/coe_file/rom13.coe"
#    "C:/Users/giuse/Desktop/vivado_projects/heterogeneity/heterogeneity.srcs/sources_1/imports/coe_file/rom14.coe"
#    "C:/Users/giuse/Desktop/vivado_projects/heterogeneity/heterogeneity.srcs/sources_1/imports/coe_file/rom15.coe"
#    "C:/Users/giuse/Desktop/vivado_projects/heterogeneity/heterogeneity.srcs/sources_1/imports/coe_file/rom16.coe"
#    "C:/Users/giuse/Desktop/vivado_projects/heterogeneity/heterogeneity.srcs/sources_1/imports/coe_file/rom17.coe"
#    "C:/Users/giuse/Desktop/vivado_projects/heterogeneity/heterogeneity.srcs/sources_1/ip/fifo_I/fifo_I.xci"
#    "C:/Users/giuse/Desktop/vivado_projects/heterogeneity/heterogeneity.srcs/sources_1/ip/clk_generator/clk_generator.xci"
#    "C:/Users/giuse/Desktop/vivado_projects/heterogeneity/heterogeneity.srcs/sources_1/ip/fifo_state_variables/fifo_state_variables.xci"
#    "C:/Users/giuse/Desktop/vivado_projects/heterogeneity/heterogeneity.srcs/sources_1/ip/rom1/rom1.xci"
#    "C:/Users/giuse/Desktop/vivado_projects/heterogeneity/heterogeneity.srcs/sources_1/ip/rom3/rom3.xci"
#    "C:/Users/giuse/Desktop/vivado_projects/heterogeneity/heterogeneity.srcs/sources_1/ip/rom_4/rom_4.xci"
#    "C:/Users/giuse/Desktop/vivado_projects/heterogeneity/heterogeneity.srcs/sources_1/ip/rom5/rom5.xci"
#    "C:/Users/giuse/Desktop/vivado_projects/heterogeneity/heterogeneity.srcs/sources_1/ip/rom6/rom6.xci"
#    "C:/Users/giuse/Desktop/vivado_projects/heterogeneity/heterogeneity.srcs/sources_1/ip/rom9/rom9.xci"
#    "C:/Users/giuse/Desktop/vivado_projects/heterogeneity/heterogeneity.srcs/sources_1/ip/rom10/rom10.xci"
#    "C:/Users/giuse/Desktop/vivado_projects/heterogeneity/heterogeneity.srcs/sources_1/ip/rom7/rom7.xci"
#    "C:/Users/giuse/Desktop/vivado_projects/heterogeneity/heterogeneity.srcs/sources_1/ip/rom13/rom13.xci"
#    "C:/Users/giuse/Desktop/vivado_projects/heterogeneity/heterogeneity.srcs/sources_1/ip/rom14/rom14.xci"
#    "C:/Users/giuse/Desktop/vivado_projects/heterogeneity/heterogeneity.srcs/sources_1/ip/rom15/rom15.xci"
#    "C:/Users/giuse/Desktop/vivado_projects/heterogeneity/heterogeneity.srcs/sources_1/ip/rom17/rom17.xci"
#    "C:/Users/giuse/Desktop/vivado_projects/heterogeneity/heterogeneity.srcs/sources_1/ip/rom2/rom2.xci"
#    "C:/Users/giuse/Desktop/vivado_projects/heterogeneity/heterogeneity.srcs/sources_1/ip/rom11/rom11.xci"
#    "C:/Users/giuse/Desktop/vivado_projects/heterogeneity/heterogeneity.srcs/sources_1/ip/rom16/rom16.xci"
#    "C:/Users/giuse/Desktop/vivado_projects/heterogeneity/heterogeneity.srcs/sources_1/ip/rom12/rom12.xci"
#    "C:/Users/giuse/Desktop/vivado_projects/heterogeneity/heterogeneity.srcs/sources_1/ip/rom8/rom8.xci"
#    "C:/Users/giuse/Desktop/vivado_projects/heterogeneity/heterogeneity.srcs/constrs_1/imports/constraints/cmoda7.xdc"
#    "C:/Users/giuse/Desktop/vivado_projects/heterogeneity/heterogeneity.srcs/sim_1/new/sim.vhd"
#    "C:/Users/giuse/Desktop/vivado_projects/heterogeneity/heterogeneity.srcs/sim_1/imports/serial_1i-10v/main_behav.wcfg"
#
# 3. The following remote source files that were added to the original project:-
#
#    <none>
#
#*****************************************************************************************

# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "heterogeneity"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "create_project.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/"]"

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xc7a35tcpg236-1

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [current_project]
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "dsa.accelerator_binary_content" -value "bitstream" -objects $obj
set_property -name "dsa.accelerator_binary_format" -value "xclbin2" -objects $obj
set_property -name "dsa.board_id" -value "cmod_a7-35t" -objects $obj
set_property -name "dsa.description" -value "Vivado generated DSA" -objects $obj
set_property -name "dsa.dr_bd_base_address" -value "0" -objects $obj
set_property -name "dsa.emu_dir" -value "emu" -objects $obj
set_property -name "dsa.flash_interface_type" -value "bpix16" -objects $obj
set_property -name "dsa.flash_offset_address" -value "0" -objects $obj
set_property -name "dsa.flash_size" -value "1024" -objects $obj
set_property -name "dsa.host_architecture" -value "x86_64" -objects $obj
set_property -name "dsa.host_interface" -value "pcie" -objects $obj
set_property -name "dsa.num_compute_units" -value "60" -objects $obj
set_property -name "dsa.platform_state" -value "pre_synth" -objects $obj
set_property -name "dsa.vendor" -value "xilinx" -objects $obj
set_property -name "dsa.version" -value "0.0" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "part" -value "xc7a35tcpg236-1" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "target_language" -value "VHDL" -objects $obj
set_property -name "webtalk.activehdl_export_sim" -value "91" -objects $obj
set_property -name "webtalk.ies_export_sim" -value "91" -objects $obj
set_property -name "webtalk.modelsim_export_sim" -value "91" -objects $obj
set_property -name "webtalk.questa_export_sim" -value "91" -objects $obj
set_property -name "webtalk.riviera_export_sim" -value "91" -objects $obj
set_property -name "webtalk.vcs_export_sim" -value "91" -objects $obj
set_property -name "webtalk.xsim_export_sim" -value "91" -objects $obj
set_property -name "webtalk.xsim_launch_sim" -value "86" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC XPM_MEMORY" -objects $obj
set_property -name "xsim.array_display_limit" -value "64" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/src/hdl/I_receiver.vhd"]\
 [file normalize "${origin_dir}/src/hdl/RS.vhd"]\
 [file normalize "${origin_dir}/src/hdl/bshifter.vhd"]\
 [file normalize "${origin_dir}/src/hdl/pqn_unit.vhd"]\
 [file normalize "${origin_dir}/src/hdl/triger_generator.vhd"]\
 [file normalize "${origin_dir}/src/hdl/uart_rxd_ctrl.vhd"]\
 [file normalize "${origin_dir}/src/hdl/uart_txd_ctrl.vhd"]\
 [file normalize "${origin_dir}/src/hdl/v_transmitter.vhd"]\
 [file normalize "${origin_dir}/src/hdl/main.vhd"]\
 [file normalize "${origin_dir}/src/ip/coe_file/rom1.coe"]\
 [file normalize "${origin_dir}/src/ip/coe_file/rom2.coe"]\
 [file normalize "${origin_dir}/src/ip/coe_file/rom3.coe"]\
 [file normalize "${origin_dir}/src/ip/coe_file/rom4.coe"]\
 [file normalize "${origin_dir}/src/ip/coe_file/rom5.coe"]\
 [file normalize "${origin_dir}/src/ip/coe_file/rom6.coe"]\
 [file normalize "${origin_dir}/src/ip/coe_file/rom7.coe"]\
 [file normalize "${origin_dir}/src/ip/coe_file/rom8.coe"]\
 [file normalize "${origin_dir}/src/ip/coe_file/rom9.coe"]\
 [file normalize "${origin_dir}/src/ip/coe_file/rom10.coe"]\
 [file normalize "${origin_dir}/src/ip/coe_file/rom11.coe"]\
 [file normalize "${origin_dir}/src/ip/coe_file/rom12.coe"]\
 [file normalize "${origin_dir}/src/ip/coe_file/rom13.coe"]\
 [file normalize "${origin_dir}/src/ip/coe_file/rom14.coe"]\
 [file normalize "${origin_dir}/src/ip/coe_file/rom15.coe"]\
 [file normalize "${origin_dir}/src/ip/coe_file/rom16.coe"]\
 [file normalize "${origin_dir}/src/ip/coe_file/rom17.coe"]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "hdl/I_receiver.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "hdl/RS.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "hdl/bshifter.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "hdl/pqn_unit.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "hdl/triger_generator.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "hdl/uart_rxd_ctrl.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "hdl/uart_txd_ctrl.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "hdl/v_transmitter.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "hdl/main.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj


# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "top" -value "main" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/src/ip/fifo_I/fifo_I.xci"]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "fifo_I/fifo_I.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/src/ip/clk_generator/clk_generator.xci"]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "clk_generator/clk_generator.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/src/ip/fifo_state_variables/fifo_state_variables.xci"]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "fifo_state_variables/fifo_state_variables.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/src/ip/rom1/rom1.xci"]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "rom1/rom1.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/src/ip/rom3/rom3.xci"]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "rom3/rom3.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/src/ip/rom_4/rom_4.xci"]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "rom_4/rom_4.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/src/ip/rom5/rom5.xci"]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "rom5/rom5.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/src/ip/rom6/rom6.xci"]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "rom6/rom6.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/src/ip/rom9/rom9.xci"]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "rom9/rom9.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/src/ip/rom10/rom10.xci"]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "rom10/rom10.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/src/ip/rom7/rom7.xci"]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "rom7/rom7.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/src/ip/rom13/rom13.xci"]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "rom13/rom13.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/src/ip/rom14/rom14.xci"]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "rom14/rom14.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/src/ip/rom15/rom15.xci"]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "rom15/rom15.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/src/ip/rom17/rom17.xci"]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "rom17/rom17.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/src/ip/rom2/rom2.xci"]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "rom2/rom2.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/src/ip/rom11/rom11.xci"]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "rom11/rom11.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/src/ip/rom16/rom16.xci"]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "rom16/rom16.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/src/ip/rom12/rom12.xci"]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "rom12/rom12.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/src/ip/rom8/rom8.xci"]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "rom8/rom8.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize ${origin_dir}/src/constraints/cmoda7.xdc]"
set file_imported [import_files -fileset constrs_1 [list $file]]
set file "constraints/cmoda7.xdc"
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property -name "target_part" -value "xc7a35tcpg236-1" -objects $obj
